# -*- coding: UTF-8 -*-
"""
Uses http://pypi.python.org/pypi/pyth/ to do its
work. Pyth reads documents from RTF 1.5 and is potentially 
compatible with RTF versions up to 1.8 We did a lot of tests
with rtf files generated by pandoc, openoffice, office 2000, 
2010. It works well, but an uncatched exepction is still possible.
"""

import cStringIO
from collections import deque
from plone.transforms.message import PloneMessageFactory as _
from plone.transforms.stringiter import StringIter
from plone.transforms.transform import Transform
from plone.transforms.transform import TransformResult

HAS_PYTH = True
try:
    from pyth.plugins.rtf15.reader import Rtf15Reader
    from pyth.plugins.xhtml.writer import XHTMLWriter
except ImportError:
    HAS_PYTH = False


class RTFTransform(Transform):
    """A transform which transforms rtf text into XHTML."""


    title = _(u'title_rtf_transform',
        default=u'RTF to HTML transform')

    inputs = ("application/rtf", "text/rtf",)
    output = "text/html"

    available = False

    def __init__(self):
        super(RTFTransform, self).__init__()
        if HAS_PYTH:
            self.available = True
 
    def filter(self, data):
        """filters control word causing to much memory consumption."""

        filter_control_words = ["{\\pict","{\\obj"]
        signs = deque()
        word = "" 
        filter = []
        for i in data:
            signs.append(i)
            if signs[0] == "{":
               word = "".join(signs)
               filter = [x for x in filter_control_words if x in word]
            if filter and i == "}":
               filter = []
               signs.clear()
               continue
            if filter:
               signs.popleft() 
               continue
            if len(signs) >= 6:
               yield signs.popleft()

        yield u"".join(signs)
                
 
    def transform(self, data, options=None):
        if self._validate(data) is None:
            return None
        
        file = cStringIO.StringIO()
        file.write(''.join(self.filter(data)))
        file.seek(0)
        doc = Rtf15Reader.read(file)
        xhtml = XHTMLWriter.write(doc)
        xhtml_ = xhtml.read()
        xhtml.close()

        return TransformResult(StringIter(xhtml_))

