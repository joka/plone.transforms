TODO
====

    - Port the xslt base transform class.

    - Write an iterator based version of the html_bodyfinder, so the pdf to
      html transforms don't need to load the whole file into memory.

    - Use reversed(iter) (needs __len__ and __getitem__) for the html
      bodyfinder?

    - benchmark the collections.deque for StringIter. In case this works, it's
      also nice for html_bodyfinder as it allows both leftpop and rightpop.

    - Make the configuration screen for the engine and enhance the transform
      finding algorithm.

    - Add an example of a TTW configurable transform and provide a base helper
      class for those (probably schema and formlib-based).

    - Add but comment out the (optional) dependencies in the setup.py.

    - Figure out a way to use a NamedTemporayFile or 'NamedTemporayDirectory'
      for returning subobjects, so these don't need to be loaded into memory.
      Some self cleaning temporary directory (on close and garbage collection)
      would be nice.

    - Reconsider passing a desired filename argument to the command transforms,
      make the infile_data_suffix argument more clever or powerful.

    - Look into distinguishing transforms based on more than the mimetypes.
      For example the pdf to html transforms exist both with subobjects and
      without subobjects support. You might want to use both of them in the
      same portal for different tasks, without needing to rely on the exact
      utility name - might be yagni as well.

    - Make a new plone.app.transforms package which has GenericSetup export/
      import handlers for the engine configuration.

    - Re-evaluate security settings.

    - Port and make more transforms ;)

      Here's the current list of transforms only available in PortalTransforms
      right now:

        html_to_web_intelligent_plain_text
        image_to_html
        lynx_dump
        office_com
        office_uno
        office_wvware
        pdf_to_text
        python
        rest
        rtf_to_html
        rtf_to_xml
        safe_html
        st
        text_pre_to_html
        text_to_html
        textile_to_html
        web_intelligent_plain_text_to_html
        word_to_html
        build_transforms
        xml

Not directly package related tasks
----------------------------------

    - Make PortalTransforms into a wrapper around plone.transforms and use it
      directly from Archetypes.

    - Look into MimetypesRegistry and consider rewriting it as a Zope3
      component as well.
